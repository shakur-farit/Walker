//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOrbitCenter;

    public static Entitas.IMatcher<GameEntity> OrbitCenter {
        get {
            if (_matcherOrbitCenter == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.OrbitCenter);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOrbitCenter = matcher;
            }

            return _matcherOrbitCenter;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Movement.OrbitCenter orbitCenter { get { return (Code.Gameplay.Features.Movement.OrbitCenter)GetComponent(GameComponentsLookup.OrbitCenter); } }
    public UnityEngine.Vector3 OrbitCenter { get { return orbitCenter.Value; } }
    public bool hasOrbitCenter { get { return HasComponent(GameComponentsLookup.OrbitCenter); } }

    public GameEntity AddOrbitCenter(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.OrbitCenter;
        var component = (Code.Gameplay.Features.Movement.OrbitCenter)CreateComponent(index, typeof(Code.Gameplay.Features.Movement.OrbitCenter));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceOrbitCenter(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.OrbitCenter;
        var component = (Code.Gameplay.Features.Movement.OrbitCenter)CreateComponent(index, typeof(Code.Gameplay.Features.Movement.OrbitCenter));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveOrbitCenter() {
        RemoveComponent(GameComponentsLookup.OrbitCenter);
        return this;
    }
}
